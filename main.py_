from pathlib import Path
from reader import Reader as StringReader
import string

BASE = Path('D:/_projects/parallel2shit/godot/font2')








def main ():
	STARTS_IDENTIFIER = string.ascii_letters + '_'
	IDENTIFIER_CHARS = string.digits+STARTS_IDENTIFIER
	WHITESPACE = string.whitespace
	testf = (BASE/'scenes/_thought2.tscn').read_text('utf8')
	f = StringReader(testf)

	skip_whitespace = lambda: f.skip_while(string.whitespace)
	def read_identifier ():
		return f.vore_while(IDENTIFIER_CHARS)

	def read_key_value ():
		skip_whitespace()
		key = read_identifier()
		skip_whitespace()
		if not f.vore('='):
			raise ValueError
		skip_whitespace()
		if f.peek_is(string.digits+'-+'):
			value = float(f.vore_while(string.digits+'.+-eE'))
		elif f.peek_is(STARTS_IDENTIFIER):
			value = f.vore_while(IDENTIFIER_CHARS)
			if f.vore('('):
				value = list(map(str.strip, f.vore_until(')').split(',')))
				f.skip()
			else:
				if   value == 'true':  value = True
				elif value == 'false': value = False
				elif value == 'null':  value = None
		elif f.vore('"'):
			begin = f.tell()
			while True:
				ch = f.read()
				if ch == '"':
					if f.peek(-2) == '\\':
						continue
					break
				if ch == '':
					raise ValueError
			value = f.text[begin:f.tell()-1]
		else:
			raise ValueError
		return key, value

	def read_item_attrib ():
		things = dict()
		while True:
			skip_whitespace()
			if f.vore(']'):
				return things
			k,v = read_key_value()
			things[k]=v

	while f.can_read():
		skip_whitespace()
		ch = f.read()

		match ch:
			case '[':
				skip_whitespace()
				typeof = read_identifier()
				things=read_item_attrib()
				print(typeof, things)
				continue
			case '':
				break
			case _:
				if ch in WHITESPACE:
					continue
				f.skip(-1)
				print(read_key_value())




if __name__ == '__main__':
	main()
